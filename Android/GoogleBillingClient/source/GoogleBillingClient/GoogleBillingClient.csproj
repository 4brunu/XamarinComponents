<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="MSBuild.Sdk.Extras/2.0.54">
  <PropertyGroup>
    <TargetFrameworks>MonoAndroid90</TargetFrameworks>
    <IsBindingProject>true</IsBindingProject>
    <AssemblyName>Xamarin.Android.Google.BillingClient</AssemblyName>
    <MonoAndroidResourcePrefix>Resources</MonoAndroidResourcePrefix>
    <MonoAndroidAssetsPrefix>Assets</MonoAndroidAssetsPrefix>
    <AndroidUseLatestPlatformSdk>False</AndroidUseLatestPlatformSdk>
    <AndroidUseIntermediateDesignerFile>True</AndroidUseIntermediateDesignerFile>
    <AndroidResgenFile>Resources\Resource.designer.cs</AndroidResgenFile>
    <RootNamespace>Android.BillingClient</RootNamespace>
    <AndroidClassParser>class-parse</AndroidClassParser>
    <AndroidCodegenTarget>XAJavaInterop1</AndroidCodegenTarget>
    <NoWarn>CS0114,CS0109,CS0108</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Xamarin.Android.Google.BillingClient</PackageId>
    <Title>Google Android Billing Client bindings for Xamarin.Android</Title>
    <PackageDescription>Xamarin.Android bindings for Google's Android Billing Client.</PackageDescription>
    <Authors>Microsoft</Authors>
    <Owners>Microsoft</Owners>
    <Copyright>© Microsoft Corporation. All rights reserved.</Copyright>
    <PackageProjectUrl>https://go.microsoft.com/fwlink/?linkid=2100110</PackageProjectUrl>
    <PackageLicenseFile>LICENSE.md</PackageLicenseFile>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageVersion>3.0.0</PackageVersion>
  </PropertyGroup>

  <ItemGroup>
    <TransformFile Include="Transforms\Metadata.xml" />
    <TransformFile Include="Transforms\EnumFields.xml" />
    <TransformFile Include="Transforms\EnumMethods.xml" />
  </ItemGroup>

  <ItemGroup>
    <!-- 
      Reference the extracted .aar's jar just for generating the binding at build time
      InputJar does not cause the .jar to get included in the final assembly
      Since we'll include the .aar itself in the package, we don't want to also include
      the classes.jar from it, we just really need it to generate the binding .dll 
    -->
    <InputJar Include="..\..\externals\classes.jar" />
    
    <!--
      Include the .aar directly inside of the nuget package in the specified PackagePath
      We will reference this from the .targets we include in the nuget
    -->
    <None Include="..\..\externals\billing.aar" Pack="True" PackagePath="aar\billing.aar">
      <Link>billing.aar</Link>
    </None>
    
    <!--
      Include the .targets file named the same as the PackageId into the nuget package itself.
      When you have a .targets with the same name as the package id in the build*/ folders
      it gets automatically imported by MSBuild into the project referencing the nuget package.
      
      We use build\ and buildTransitive\ (which is only supported on newer nuget versions)
      since the buildTransitive\ ensures that even if this package is referenced implicitly in a project
      by another nuget package reference, the .targets will still be imported from this package.

      Inside the .targets file we include a reference to the .aar we bundled in the package:
        <ItemGroup><AndroidAarLibrary Include="..." /></ItemGroup>
      This will cause the .aar to be included in the final app referencing this nuget package when 
      it gets built.
    -->
    <None Include="Xamarin.Android.Google.BillingClient.targets" Pack="True" PackagePath="build\monoandroid90" />
    <None Include="Xamarin.Android.Google.BillingClient.targets" Pack="True" PackagePath="buildTransitive\monoandroid90" />
    
    <!-- Include our license and third party notices file in the nuget package -->
    <None Include="..\..\License.md" Pack="true" PackagePath="LICENSE.md" />
    <None Include="..\..\External-Dependency-Info.txt" Pack="True" PackagePath="THIRD-PARTY-NOTICES.txt" />

  </ItemGroup>

  <ItemGroup>	
    <PackageReference Include="Xamarin.AndroidX.Annotation" Version="1.1.0.1" />	
  </ItemGroup>
</Project>
